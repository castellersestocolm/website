name: Deploy

on:
  push:
    branches: [ "master", "dev" ]

env:
  REGISTRY: ghcr.io

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build-backend:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    name: Build backend
    
    steps:
    - uses: actions/checkout@v4

    - uses: ./.github/actions/build-and-push
      name: Build backend
      with:
        name: backend
        github_token: ${{ secrets.GITHUB_TOKEN }}
        build_target: ${{ vars.BUILD_TARGET }}

  build-frontend-org:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    name: Build frontend-org
    
    steps:
    - uses: actions/checkout@v4

    - uses: ./.github/actions/build-and-push
      name: Build frontend-org
      with:
        name: frontend-org
        dockerfile: Dockerfile-prod
        github_token: ${{ secrets.GITHUB_TOKEN }}
        build_target: ${{ vars.BUILD_TARGET }}
        react_app_api_base_url: ${{ vars.REACT_APP_API_BASE_URL }}
        react_app_org_base_url: ${{ vars.REACT_APP_ORG_BASE_URL }}
        react_app_org_info_email: ${{ vars.REACT_APP_ORG_INFO_EMAIL }}
        react_app_towers_base_url: ${{ vars.REACT_APP_TOWERS_BASE_URL }}
        react_app_towers_info_email: ${{ vars.REACT_APP_TOWERS_INFO_EMAIL }}
        react_app_pinyator_base_url: ${{ vars.REACT_APP_PINYATOR_BASE_URL }}

  build-frontend-towers:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    name: Build frontend-towers

    steps:
    - uses: actions/checkout@v4

    - uses: ./.github/actions/build-and-push
      name: Build frontend-towers
      with:
        name: frontend-towers
        dockerfile: Dockerfile-prod
        github_token: ${{ secrets.GITHUB_TOKEN }}
        build_target: ${{ vars.BUILD_TARGET }}
        react_app_api_base_url: ${{ vars.REACT_APP_API_BASE_URL }}
        react_app_org_base_url: ${{ vars.REACT_APP_ORG_BASE_URL }}
        react_app_org_info_email: ${{ vars.REACT_APP_ORG_INFO_EMAIL }}
        react_app_towers_base_url: ${{ vars.REACT_APP_TOWERS_BASE_URL }}
        react_app_towers_info_email: ${{ vars.REACT_APP_TOWERS_INFO_EMAIL }}
        react_app_pinyator_base_url: ${{ vars.REACT_APP_PINYATOR_BASE_URL }}
      
  build-pinyator:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    name: Build pinyator
    
    steps:
    - uses: actions/checkout@v4

    - uses: ./.github/actions/build-and-push
      name: Build pinyator
      with:
        name: pinyator
        dockerfile: Dockerfile-prod
        github_token: ${{ secrets.GITHUB_TOKEN }}
        build_target: ${{ vars.BUILD_TARGET }}
      
  build-php:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    name: Build php
    
    steps:
    - uses: actions/checkout@v4

    - uses: ./.github/actions/build-and-push
      name: Build php
      with:
        name: php
        github_token: ${{ secrets.GITHUB_TOKEN }}
        build_target: ${{ vars.BUILD_TARGET }}

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment: ${{ github.ref_name }}
    # needs: [ build-backend, build-frontend-org, build-frontend-towers, build-pinyator, build-php ]
    needs: [ build-backend, build-frontend-org, build-frontend-towers, build-pinyator, build-php ]
    name: Deploy

    steps:
    - uses: actions/checkout@v4

    - uses: appleboy/ssh-action@v1.2.2
      name: Deploy
      env:
        BUILD_TAG: ${{ github.sha }}
        BUILD_TARGET: ${{ vars.BUILD_TARGET }}
      with:
        host: ${{ secrets.SSH_REMOTE_HOST }}
        username: ${{ secrets.SSH_REMOTE_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        envs: BUILD_TAG,BUILD_TARGET
        script: |
          docker stack deploy --with-registry-auth --compose-file website/docker-compose-prod.yml --detach=true comunicat
          docker image prune --all --force
