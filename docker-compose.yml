version: "3.9"

services:
  backend:
    image: backend
    build:
      context: backend
      args:
        - BUILD_TARGET=dev
    stdin_open: true
    tty: true
    restart: on-failure
    entrypoint: ["wait-for-it", "database:5432", "--", "python", "manage.py"]
    command: ["runserver", "0.0.0.0:8000"]
    networks:
      - comunicat
    volumes:
      - ./backend/src:/backend/src:cached
      - ./backend/media:/backend/media:cached
      - ./backend/media-private:/backend/media-private:cached
      - internal-media:/backend/internal_media:cached
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
        mode: host
    depends_on:
      - database
      - redis
    env_file:
      - ./envs/local.env
  frontend-org:
    image: frontend-org
    build: frontend-org
    stdin_open: true
    tty: true
    restart: on-failure
    entrypoint: ["npm"]
    command: ["start"]
    networks:
      - comunicat
    volumes:
      - ./frontend-org/app:/frontend-org:cached
    ports:
      - target: 3100
        published: 3100
        protocol: tcp
        mode: host
    env_file:
      - ./envs/local.env
    environment:
      PORT: 3100
      WDS_SOCKET_HOST: 127.0.0.1
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
  frontend-towers:
    image: frontend-towers
    build: frontend-towers
    stdin_open: true
    tty: true
    restart: on-failure
    entrypoint: ["npm"]
    command: ["start"]
    networks:
      - comunicat
    volumes:
      - ./frontend-towers/app:/frontend-towers:cached
    ports:
      - target: 3200
        published: 3200
        protocol: tcp
        mode: host
    env_file:
      - ./envs/local.env
    environment:
      PORT: 3200
      WDS_SOCKET_HOST: 127.0.0.1
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
  database:
    image: postgres:17.2
    ports:
      - 5432:5432
    networks:
      - comunicat
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      DJANGO_WATCHMAN_TIMEOUT: 20
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: comunicat
      POSTGRES_PASSWORD: comunicat
      POSTGRES_DB: comunicat
  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    ports:
      - 6390:6379
    networks:
      - comunicat
  worker:
    image: backend
    stdin_open: true
    tty: true
    entrypoint: [ "celery" ]
    command: [ "-A", "comunicat", "worker", "-Q", "default" ]
    depends_on:
      - redis
      - database
    volumes:
      - ./backend/src:/backend/src:cached
      - ./backend/media:/backend/media:cached
      - ./backend/media-private:/backend/media-private:cached
      - internal-media:/backend/internal_media:cached
    networks:
      - comunicat
    env_file:
      - ./envs/local.env
  beat:
    image: backend
    entrypoint: [ "celery" ]
    command:
      [ "-A", "comunicat", "beat", "--pidfile=", "-s", "/data/celerybeat-schedule", "-l", "debug" ]
    depends_on:
      - worker
    volumes:
      - celerybeat-data:/data
      - ./backend:/backend/backend:cached
    networks:
      - comunicat
    env_file:
      - ./envs/local.env
  pinyator:
    image: pinyator
    build: pinyator
    stdin_open: true
    tty: true
    restart: on-failure
    networks:
      - comunicat
    volumes:
      - ./pinyator/src:/pinyator/pinyator:cached
    ports:
      - target: 80
        published: 8100
        protocol: tcp
        mode: host
    depends_on:
      - php
    env_file:
      - ./envs/local.env
  php:
    image: php
    build: php
    stdin_open: true
    tty: true
    restart: on-failure
    # entrypoint: ["wait-for-it", "database:5432", "--", "php"]
    # command: ["-S", "0.0.0.0:8110", "./pinyator/Pinyator.php"]
    networks:
      - comunicat
    volumes:
      - ./pinyator/src:/pinyator/pinyator:cached
    depends_on:
      - mysql
    env_file:
      - ./envs/local.env
  mysql:
    image: mysql:8.4.4
    ports:
      - 3306:3306
    networks:
      - comunicat
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: pinyator
      MYSQL_USER: pinyator
      MYSQL_PASSWORD: pinyator
      MYSQL_DATABASE: pinyator
#  mail:
#    image: ghcr.io/docker-mailserver/docker-mailserver:15.0.0
#    deploy:
#      replicas: 1
#    restart: always
#    ports:
#      - target: 25
#        published: 25
#        protocol: tcp
#        mode: host
#      - target: 587
#        published: 587
#        protocol: tcp
#        mode: host
#      - target: 993
#        published: 993
#        protocol: tcp
#        mode: host
#      - target: 995
#        published: 995
#        protocol: tcp
#        mode: host
#    volumes:
#      - ./docker-data/dms/mail-data/:/var/mail/
#      - ./docker-data/dms/mail-state/:/var/mail-state/
#      - ./docker-data/dms/mail-logs/:/var/log/mail/
#      - ./docker-data/dms/config/:/tmp/docker-mailserver/
#    environment:
#      - PERMIT_DOCKER=network
#      - DEFAULT_RELAY_HOST=[smtp-relay.gmail.com]:587
#      - SSL_TYPE=
#      - OVERRIDE_HOSTNAME=mail.castellersestocolm.se
#      - LOG_LEVEL=debug
#    networks:
#      - comunicat

volumes:
  internal-media:
  postgres-data:
  mysql-data:
  redis-data:
  celerybeat-data:

networks:
  comunicat:
    ipam:
      config:
        - subnet: 172.24.0.0/16
