version: "3.9"

services:
  backend:
    image: ghcr.io/castellersestocolm/backend:${BUILD_TAG:-dev}
    build:
      context: backend
      args:
        - BUILD_TARGET=${BUILD_TARGET:-dev}
    stdin_open: true
    tty: true
    restart: on-failure
    entrypoint: ["wait-for-it", "database:5432", "--", "python", "manage.py"]
    command: ["runserver", "0.0.0.0:8000"]
    networks:
      - comunicat
    volumes:
      - ./backend:/backend/backend:cached
      - internal-media:/backend/internal_media:cached
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
        mode: host
    depends_on:
      - database
      - redis
    env_file:
      - ./envs/local.env
#  frontend-org:
#    image: ghcr.io/castellersestocolm/frontend-org:${BUILD_TAG:-dev}
#    build: frontend-org
#    stdin_open: true
#    tty: true
#    restart: on-failure
#    entrypoint: ["npm"]
#    command: ["start"]
#    networks:
#      - comunicat
#    volumes:
#      - ./frontend-org/app:/frontend-org/frontend-org/app:cached
#    ports:
#      - target: 3000
#        published: 3100
#        protocol: tcp
#        mode: host
#    env_file:
#      - ./envs/local.env
  frontend-towers:
    image: ghcr.io/castellersestocolm/frontend-towers:${BUILD_TAG:-dev}
    build:
      context: frontend-towers
      dockerfile: Dockerfile-prod
      args:
        - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL:-http://localhost:8000/api/1.0}
        - REACT_APP_ORG_BASE_URL=${REACT_APP_ORG_BASE_URL:-http://localhost:3200}
        - REACT_APP_ORG_INFO_EMAIL=${REACT_APP_ORG_INFO_EMAIL:-info@lesquatrebarres.org}
        - REACT_APP_TOWERS_BASE_URL=${REACT_APP_TOWERS_BASE_URL:-http://localhost:3100}
        - REACT_APP_TOWERS_INFO_EMAIL=${REACT_APP_TOWERS_INFO_EMAIL:-info@castellersestocolm.se}
    stdin_open: true
    tty: true
    restart: on-failure
    networks:
      - comunicat
    volumes:
      - ./frontend-towers/app:/frontend-towers/frontend-towers/app:cached
    ports:
      - target: 80
        published: 3200
        protocol: tcp
        mode: host
  database:
    image: postgres:17.2
    ports:
      - 5432:5432
    networks:
      - comunicat
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      DJANGO_WATCHMAN_TIMEOUT: 20
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: comunicat
      POSTGRES_PASSWORD: comunicat
      POSTGRES_DB: comunicat
  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    ports:
      - 6390:6379
    networks:
      - comunicat
  worker:
    image: ghcr.io/castellersestocolm/backend:${BUILD_TAG:-dev}
    stdin_open: true
    tty: true
    entrypoint: [ "celery" ]
    command: [ "-A", "comunicat", "worker", "-Q", "default" ]
    depends_on:
      - redis
      - database
    volumes:
      - ./backend:/backend/backend:cached
      - internal-media:/backend/internal_media:cached
    networks:
      - comunicat
    env_file:
      - ./envs/local.env
  beat:
    image: ghcr.io/castellersestocolm/backend:${BUILD_TAG:-dev}
    entrypoint: [ "celery" ]
    command:
      [ "-A", "comunicat", "beat", "--pidfile=", "-s", "/data/celerybeat-schedule", "-l", "debug" ]
    depends_on:
      - worker
    volumes:
      - celerybeat-data:/data
      - ./backend:/backend/backend:cached
    networks:
      - comunicat
    env_file:
      - ./envs/local.env
  pinyator:
    image: ghcr.io/castellersestocolm/pinyator:${BUILD_TAG:-dev}
    build: pinyator
    stdin_open: true
    tty: true
    restart: on-failure
    networks:
      - comunicat
    volumes:
      - ./pinyator/src:/pinyator/pinyator:cached
    ports:
      - target: 80
        published: 8100
        protocol: tcp
        mode: host
    depends_on:
      - php
    env_file:
      - ./envs/local.env
  php:
    image: ghcr.io/castellersestocolm/php:${BUILD_TAG:-dev}
    build: php
    stdin_open: true
    tty: true
    restart: on-failure
    # entrypoint: ["wait-for-it", "database:5432", "--", "php"]
    # command: ["-S", "0.0.0.0:8110", "./pinyator/Pinyator.php"]
    networks:
      - comunicat
    volumes:
      - ./pinyator/src:/pinyator/pinyator:cached
    depends_on:
      - mysql
    env_file:
      - ./envs/local.env
  mysql:
    image: mysql:8.4.4
    ports:
      - 3306:3306
    networks:
      - comunicat
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: pinyator
      MYSQL_USER: pinyator
      MYSQL_PASSWORD: pinyator
      MYSQL_DATABASE: pinyator

volumes:
  internal-media:
  postgres-data:
  mysql-data:
  redis-data:
  celerybeat-data:

networks:
  comunicat:
    ipam:
      config:
        - subnet: 172.24.0.0/16
