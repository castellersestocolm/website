version: "3.9"

services:
  backend:
    image: ghcr.io/castellersestocolm/backend:${BUILD_TAG:-dev}
    build:
      context: backend
      args:
        - BUILD_TARGET=${BUILD_TARGET:-dev}
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 30s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 60s
      retries: 5
      start_period: 30s
      timeout: 10s
    stdin_open: true
    tty: true
    restart: on-failure
    entrypoint: ["wait-for-it", "database:5432", "--", "python", "manage.py"]
    command: ["runserver", "0.0.0.0:8000"]
    networks:
      - comunicat
    volumes:
      - media-files:/backend/media
      - media-private-files:/backend/media-private
      - internal-media:/backend/internal_media:cached
    ports:
      - target: 8000
        protocol: tcp
    depends_on:
      - database
      - redis
    env_file:
      - ./envs/local.env
  frontend-org:
    image: ghcr.io/castellersestocolm/frontend-org:${BUILD_TAG:-dev}
    build:
      context: frontend-org
      dockerfile: Dockerfile-prod
      args:
        - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL:-http://localhost:8000/api/1.0}
        - REACT_APP_ORG_BASE_URL=${REACT_APP_ORG_BASE_URL:-http://localhost:3200}
        - REACT_APP_ORG_INFO_EMAIL=${REACT_APP_ORG_INFO_EMAIL:-info@lesquatrebarres.org}
        - REACT_APP_TOWERS_BASE_URL=${REACT_APP_TOWERS_BASE_URL:-http://localhost:3100}
        - REACT_APP_TOWERS_INFO_EMAIL=${REACT_APP_TOWERS_INFO_EMAIL:-info@castellersestocolm.se}
        - REACT_APP_PINYATOR_BASE_URL=${REACT_APP_PINYATOR_BASE_URL:-http://localhost:8100}
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost"]
      interval: 60s
      retries: 5
      start_period: 10s
      timeout: 10s
    stdin_open: true
    tty: true
    restart: on-failure
    networks:
      - comunicat
    ports:
      - target: 80
        protocol: tcp
  frontend-towers:
    image: ghcr.io/castellersestocolm/frontend-towers:${BUILD_TAG:-dev}
    build:
      context: frontend-towers
      dockerfile: Dockerfile-prod
      args:
        - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL:-http://localhost:8000/api/1.0}
        - REACT_APP_ORG_BASE_URL=${REACT_APP_ORG_BASE_URL:-http://localhost:3200}
        - REACT_APP_ORG_INFO_EMAIL=${REACT_APP_ORG_INFO_EMAIL:-info@lesquatrebarres.org}
        - REACT_APP_TOWERS_BASE_URL=${REACT_APP_TOWERS_BASE_URL:-http://localhost:3100}
        - REACT_APP_TOWERS_INFO_EMAIL=${REACT_APP_TOWERS_INFO_EMAIL:-info@castellersestocolm.se}
        - REACT_APP_PINYATOR_BASE_URL=${REACT_APP_PINYATOR_BASE_URL:-http://localhost:8100}
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost"]
      interval: 60s
      retries: 5
      start_period: 10s
      timeout: 10s
    stdin_open: true
    tty: true
    restart: on-failure
    networks:
      - comunicat
    ports:
      - target: 80
        protocol: tcp
  database:
    image: postgres:17.2
    deploy:
      replicas: 1
    ports:
      - 5432:5432
    networks:
      - comunicat
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      DJANGO_WATCHMAN_TIMEOUT: 20
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: comunicat
      POSTGRES_PASSWORD: comunicat
      POSTGRES_DB: comunicat
  redis:
    image: redis:7-alpine
    deploy:
      replicas: 1
    volumes:
      - redis-data:/data
    ports:
      - 6390:6379
    networks:
      - comunicat
  worker:
    image: ghcr.io/castellersestocolm/backend:${BUILD_TAG:-dev}
    deploy:
      replicas: 1
    stdin_open: true
    tty: true
    entrypoint: [ "celery" ]
    command: [ "-A", "comunicat", "worker", "-Q", "default" ]
    depends_on:
      - redis
      - database
    volumes:
      - media-files:/backend/media
      - media-private-files:/backend/media-private
      - internal-media:/backend/internal_media:cached
    networks:
      - comunicat
    env_file:
      - ./envs/local.env
  beat:
    image: ghcr.io/castellersestocolm/backend:${BUILD_TAG:-dev}
    deploy:
      replicas: 1
    entrypoint: [ "celery" ]
    command:
      [ "-A", "comunicat", "beat", "--pidfile=", "-s", "/data/celerybeat-schedule", "-l", "debug" ]
    depends_on:
      - worker
    volumes:
      - celerybeat-data:/data
    networks:
      - comunicat
    env_file:
      - ./envs/local.env
  pinyator:
    image: ghcr.io/castellersestocolm/pinyator:${BUILD_TAG:-dev}
    build:
      context: pinyator
      dockerfile: Dockerfile-prod
    deploy:
      replicas: 1
    stdin_open: true
    tty: true
    restart: on-failure
    networks:
      - comunicat
    ports:
      - target: 80
        published: 8100
        protocol: tcp
        mode: host
    depends_on:
      - php
    env_file:
      - ./envs/local.env
  php:
    image: ghcr.io/castellersestocolm/php:${BUILD_TAG:-dev}
    build: php
    deploy:
      replicas: 1
    stdin_open: true
    tty: true
    restart: on-failure
    # entrypoint: ["wait-for-it", "database:5432", "--", "php"]
    # command: ["-S", "0.0.0.0:8110", "./pinyator/Pinyator.php"]
    networks:
      - comunicat
    volumes:
      - ./pinyator/src:/pinyator/pinyator:cached
    depends_on:
      - mysql
    env_file:
      - ./envs/local.env
  mysql:
    image: mysql:8.4.4
    deploy:
      replicas: 1
    ports:
      - 3306:3306
    networks:
      - comunicat
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: pinyator
      MYSQL_USER: pinyator
      MYSQL_PASSWORD: pinyator
      MYSQL_DATABASE: pinyator
  proxy:
    image: haproxytech/haproxy-alpine:3.2
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    restart: on-failure
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      - target: 3210
        published: 3210
        protocol: tcp
        mode: host
    volumes:
      - ./docker-data/haproxy/:/usr/local/etc/haproxy:ro
    depends_on:
      - backend
    networks:
      - comunicat

volumes:
  media-files:
  media-private-files:
  internal-media:
  postgres-data:
  mysql-data:
  redis-data:
  celerybeat-data:

networks:
  comunicat:
    ipam:
      config:
        - subnet: 172.24.0.0/16
